// height - числовое значение поля "Рост, см"
// weight - числовое значение поля "Вес, кг"
// функция возвращает строковое описание результата.
export const imt = (height, weight) => {
  const exp = weight / ((height/100) ** 2);

  const rows = {
    1: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Выраженный дефицит массы тела.`,
      risk: `Низкий риск сердечно - сосудистых заболеваний.`
    },
    2: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Недостаточная (дефицит) масса тела.`,
      risk: `Низкий риск сердечно-сосудистых заболеваний.`
    },
    3: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Норма.`,
      risk: `Обычный риск сердечно-сосудистых заболеваний.`
    },
    4: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Избыточная масса тела (предожирение).`,
      risk: `Повышенный риск сердечно-сосудистых заболеваний.`
    },
    5: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Ожирение первой степени.`,
      risk: `Высокий риск сердечно-сосудистых заболеваний.`
    },
    6: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Ожирение второй степени.`,
      risk: `Очень высокий риск сердечно-сосудистых заболеваний.`
    },
    7: {
      imt: `${exp.toFixed(2)} кг / м2`,
      category: `Ожирение третьей степени (морбидное).`,
      risk: `Чрезвычайно высокий риск сердечно-сосудистых заболеваний.`
    },
  };

  const range = {
    1:(val) => val <= 15.99 ? rows[1] : false,
    2:(val) => val >= 16 && val <= 18.49 ? rows[2] : false,
    3:(val) => val >= 18.50 && val <= 24.99 ? rows[3] : false,
    4:(val) => val >= 25 && val <= 29.99 ? rows[4] : false,
    5:(val) => val >= 30 && val <= 34.99 ? rows[5] : false,
    6:(val) => val >= 35 && val <= 39.99 ? rows[6] : false,
    7:(val) => val >= 40 ? rows[7] : false,
  };

  return Object.entries(range).filter((func) => func[1](exp) !== false).flat()[1](exp);
};

